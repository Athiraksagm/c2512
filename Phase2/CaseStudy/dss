#include<iostream>
#include<sstream>
#include<string>

#include "./../headers/medical_History_main.h"
#include "./../headers/ui_common.h"

class MedicalHistoryController { 
    public: 
        static void Read(std::string& patient_Number, std::string& diagnosis, std::string& treatment , std::string& prescription, int flags = 3) {
            if((flags & 1) != 0) {
                std::cout << "Diagnosis:"; std::cin >> diagnosis;
                std::cout << "Treatment:"; std::cin >> treatment;
                std::cout << "Prescription:"; std::cin >> prescription;
            }
        }

        void Create() {
            uiCommon.TitleBar("Admin App > Department Management > Create Medical History");
            int flags = 3;
            std::string patient_Number;
            std::string diagnosis;
            std::string treatment;
            std::string prescription;
            
            do {
                Read(patient_Number, diagnosis, treatment, prescription, flags);
                int proceedOption; 

                std::stringstream soutput; 
                soutput << "91 - Proceed to create department." << std::endl;
                soutput << "\tYour choice:"; 
                proceedOption = uiCommon.in.Int(soutput.str());

                if(91 == proceedOption) {
                    //set to biz object
                    break;
                }
                flags = proceedOption;
            } while(true);
            std::cout << "Medical History of patient(PAT1001) is created successfully." << std::endl;
            uiCommon.PressAnyKey(true);        
        }

        void View() {
            uiCommon.TitleBar("Admin App > Medical History Management > View Medical History");
            std::cout << "Enter the patient number : PAT1001" << std::endl;

             std::cout << "Patient Number\tDiagnosis\tTreatment\tPriscription\t\tDate_Time\n";
            std::cout << "PAT1001\tFever\tMonitored Temperature\tParacetamol\t\t2025-01-22 10:00\n";

             std::cout << "Medical History of patient(PAT1001) Viewed successfully." << std::endl;
            uiCommon.PressAnyKey(true); 
        }
        void Edit() {
            uiCommon.TitleBar("Admin App > Medical History Management > Edit  Current Medical History");
            std::cout << "Enter the patient number to be edited : PAT1001" << std::endl;

            std::cout << "patient_Number\tdiagnosis\t\ttreatment\tprescription\n";
            std::cout << "PAT1001\tFever\t\tMonitored Temperature\tParacetamol\n";

            int updateChoice;
            std::cout << "Enter your choice : ";
            std::cin >> updateChoice;

            int flags = 3;
            std::string patient_Number;
            std::string diagnosis;
            std::string treatment;
            std::string prescription;

            do {
                Read(patient_Number, diagnosis, treatment, prescription, flags);
                int proceedOption; 

                std::stringstream soutput; 
                soutput << "1- Edit diagnosis" << std::endl;
                soutput << "2- Edit treatment" << std::endl;
                soutput << "4- Edit prescription" << std::endl;
                soutput << "Note - Edit sum of choices for multiple fields editing" << std::endl;
                soutput << "\tYour choice:"; 
                proceedOption = uiCommon.in.Int(soutput.str());

                if(91 == proceedOption) {
                    //set to biz object
                    break;
                }
                flags = proceedOption;
            } while(true);

             std::cout << "Medical History Edited successfully." << std::endl;
            uiCommon.PressAnyKey(true); 
        }

        
};

static int ReadMedicalHistoryMenu() {
    int choice;
    
    uiCommon.TitleBar("Admin App > Medical History Management");

    std::stringstream soutput;
    soutput << "1 - Create Medical History" << std::endl;
    soutput << "2 - View Medical History" << std::endl;
    soutput << "3 - Edit Medical History" << std::endl;
    soutput << "99 - Exit" << std::endl;
    soutput << "Your choice:"; 
    choice = uiCommon.in.Int(soutput.str()); //std::cin >> choice;
    
    uiCommon.Line('~');
    uiCommon.PressAnyKey(true); 
    return choice;
}

void ManageMedicalHistory() { 
    MedicalHistoryController controller;
    
    int choice;

    do { 
        choice = ReadMedicalHistoryMenu();
        switch(choice) {
            case 99: {
                std::cout <<"Exited successfully.." << std::endl;
            } break;
            case 1: {
                controller.Create();
            } break;
            case 2: {
                controller.View();
            } break;
             case 3: {
                controller.Edit();
            } break;
        }
    } while(99 != choice);
}
