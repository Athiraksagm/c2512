#include<iostream>
#include<thread>
#include<vector>
#include<string>
class LabTest{

     private:
          std::string testId;
          double resultValue;
     public:
          LabTest(std::string id, double result) : testId(id), resultValue(result) {}
          double findSum(std::vector<double> &vec);
          void findMinOfFirstHalf(std::vector<double> &vec);
          void findMaxOfSecondHalf(std::vector<double> &vec);
};



//findSum of ResultValues
double findSum(const std::vector<double> &vec)
{
    double sum = 0;
    for(double res : vec)
{
   sum+=res;
}
    return sum;
}

//findmin in 1st half ,find max in 2nd half

void LabTest::findMinOfFirstHalf(const std::vector<double> &vec)
{
    int min = vec[0];
    int half =( (vec.size()-1)/2);
    for (int i = 1; i < half; i++)
    {
        if (vec[i] < min)
        {
            min = vec[i];
        }
    }
    std::cout << "The minimum value is: " << min << std::endl;

}


void LabTest::findMaxOfSecondHalf(const std::vector<double> &vec)
{
     int max = vec[0];
    
    for (int i = ( (vec.size()-1)/2); i < (vec.size())-1; i++)
    {
        if (vec[i] > max)
        {
            max = vec[i];
        }
    }
    std::cout << "The maximum value is: " << max << std::endl;
}

int main()
{
std::string id;
double result;
double sum;
//create vector add 5 objects

std::vector<double> tests = {10.0,20.0,30.0,40.0,50.0};

LabTest test(id,result);
sum=test.findSum(tests);
std::cout << "sum is " << sum << std::endl;
test.findMinOfFirstHalf(tests);
test.findMaxOfSecondHalf(tests);
return 0;
}
