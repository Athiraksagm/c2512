void requestStats(int interval)
{
    httplib::Client client("http://localhost:8080");

    while (true)
    {
        auto res = client.Get("/stats");

        if (res && res->status == 200)
        {
            if (res->body.empty())  // Check if response body is empty
            {
                std::cerr << "Error: Received empty response from server.\n";
            }
            else
            {
                try
                {
                    json stats = json::parse(res->body);
                    std::cout << "Received stats:\n";
                    std::cout << "Boot Count: " << stats["boot_count"] << "\n";
                    std::cout << "Uptime: " << stats["uptime"] << " seconds\n";

                    // Save received statistics to CSV
                    saveStatsToCSV(stats["boot_count"], stats["uptime"]);
                }
                catch (const json::parse_error &e)
                {
                    std::cerr << "JSON Parse Error: " << e.what() << "\n";
                }
            }
        }
        else
        {
            std::cerr << "Failed to get stats from server. Response status: " 
                      << (res ? std::to_string(res->status) : "No Response") << "\n";
        }

        std::this_thread::sleep_for(std::chrono::seconds(interval));
    }
}