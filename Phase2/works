/**
 * @brief Retrieves the system boot count.
 * @return The number of times the system has rebooted, or -1 on failure.
 */
int getBootCount();

/**
 * @brief Retrieves the system uptime in seconds.
 * @return The system uptime in seconds, or -1 on failure.
 */
long getUptime();

/**
 * @brief Loads the logging interval configuration from config.xml.
 * @details If the configuration file is missing or invalid, it falls back to the default interval.
 */
void loadConfig();

/**
 * @brief Periodically broadcasts system statistics to all connected WebSocket clients.
 * @details Runs in a loop, sending the latest boot count and uptime at configured intervals.
 */
void broadcastStats();

/**
 * @brief Handles communication with an individual WebSocket client.
 * @param socket The socket connected to the client.
 * @details Accepts a WebSocket connection, responds to requests, and maintains the connection for periodic updates.
 */
void handleClient(boost::asio::ip::tcp::socket socket);