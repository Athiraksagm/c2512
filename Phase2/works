Slide 1: System Stat Logging Microservice

Functional Requirements

Server Application:

Monitors system boot count and total uptime.

Sends statistics at a configurable interval (set in XML).

Responds to REST API requests with JSON data.

Sends periodic updates to connected clients.

Handles multiple client requests concurrently.


Client Application:

Requests system statistics from the server.

Parses JSON responses.

Saves statistics to a CSV file (if enabled via CLI).

CSV includes date, time, boot count, and uptime.



---

Slide 2: Non-Functional & Common Considerations

Non-Functional Requirements:

Implemented in C++14 or above.

Separate CMake projects for client and server.

Unit tests (GTest) for the server.

Multi-threaded design for handling multiple requests.


Common Considerations:

JSON-based communication between client and server.

Multi-threading ensures efficient request handling.

Configuration settings stored in XML.

Optimized for minimal resource usage and high performance.

Robust error handling for connection failures & invalid requests.


