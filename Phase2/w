athira@INTVMLT2342:/mnt/c/Users/2022004/Desktop/SystemStatLoggingMicroservice/server/build$ make
[ 57%] Built target server
Consolidate compiler generated dependencies of target test_server
[ 71%] Building CXX object CMakeFiles/test_server.dir/test/test_server.cpp.o
/mnt/c/Users/2022004/Desktop/SystemStatLoggingMicroservice/server/test/test_server.cpp: In member function ‘virtual void ServerTest_HandleWebSocketClient_Test::TestBody()’:
/mnt/c/Users/2022004/Desktop/SystemStatLoggingMicroservice/server/test/test_server.cpp:228:41: error: ‘class Server’ has no member named ‘getIOContext’
  228 |     ip::tcp::socket dummy_socket(server.getIOContext());  // Create a dummy socket
      |                                         ^~~~~~~~~~~~
make[2]: *** [CMakeFiles/test_server.dir/build.make:76: CMakeFiles/test_server.dir/test/test_server.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:111: CMakeFiles/test_server.dir/all] Error 2
make: *** [Makefile:101: all] Error 2


TEST(ServerTest, HandleWebSocketClient) {
    Server server;
    ip::tcp::socket dummy_socket(server.getIOContext());  // Create a dummy socket
    EXPECT_NO_THROW(server.handleWebSocketClient(std::move(dummy_socket)));
}



void Server::sendPeriodicStats(bool test_mode) {
    json periodicStats;
    periodicStats["boot_count"] = boot_count.load();
    periodicStats["uptime"] = getUptime();

    std::lock_guard<std::mutex> lock(clients_mutex);
    for (auto &client : clients) {
        boost::system::error_code ec;
        client->write(net::buffer(periodicStats.dump()), ec);
    }

    if (!test_mode) {  // Prevent infinite loop in tests
        std::this_thread::sleep_for(std::chrono::seconds(logging_interval));
        sendPeriodicStats(false);
    }
}



TEST(ServerTest, SendPeriodicStats) {
    Server server;
    EXPECT_NO_THROW(server.sendPeriodicStats(true));  // Run once
}
