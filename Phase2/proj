#include "server.h"

int main(int argc, char* argv[]) {
    std::cout << "=============================\n"
              << " SYSTEM STAT LOGGING SERVER\n"
              << "=============================\n\n";

    const std::string ip_address = "0.0.0.0";
    int port = 9000;

    if (argc > 1) {
        try {
            port = std::stoi(argv[1]);
            if (port <= 0 || port > 65535) {
                throw std::out_of_range("Invalid port range");
            }
        } catch (...) {
            std::cerr << "Error: Invalid port argument. Using default port 9000.\n";
            port = 9000;
        }
    }

    std::cout << "Server running at http://" << ip_address << ":" << port << "...\n\n";

    loadConfig();
    boot_count.store(getBootCount());

    boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::make_address(ip_address), port);
    ip::tcp::acceptor acceptor(ioc, endpoint);

    std::thread logger(broadcastStats);
    logger.detach();

    while (true) {
        ip::tcp::socket socket(ioc);
        boost::system::error_code ec;
        acceptor.accept(socket, ec);
        if (!ec) {
            std::thread(handleClient, std::move(socket)).detach();
        } else {
            std::cerr << "Error accepting connection: " << ec.message() << "\n";
        }
    }

    return 0;
}
