#include "client.h"

int main(int argc, char* argv[]) 
{
    signal(SIGINT, signalHandler);

    bool logToFile = false;
    std::string host = "0.0.0.0";  // Must match the server IP
    int rest_port = 8080;  // Default REST API port
    int ws_port = 9000;    // Default WebSocket port

    // Parse command-line arguments
    if (argc > 1) {
        std::string input_host = argv[1];

        if (input_host != host) {
            std::cerr << "Error: Client must use the same IP as the server (" << host << ").\n";
            return 1;
        }

        host = input_host;
    }

    if (argc > 2) {
        try {
            rest_port = std::stoi(argv[2]); // REST API port
            ws_port = std::stoi(argv[3]);   // WebSocket port
        } catch (...) {
            std::cerr << "Error: Invalid port numbers. Using default ports (REST: 8080, WS: 9000).\n";
            rest_port = 8080;
            ws_port = 9000;
        }
    }

    if (argc > 4 && std::string(argv[4]) == "--log") {
        logToFile = true;
    }

    std::cout << "=============================\n"
              << " SYSTEM STAT LOGGING CLIENT\n"
              << "=============================\n\n";
    std::cout << "Requesting initial stats from " << host << ":" << rest_port << "\n";

    requestInitialStats(host, rest_port, logToFile);  // Fetch initial stats via REST API
    std::cout << "\nConnecting to WebSocket at " << host << ":" << ws_port << " for periodic updates...\n";

    connectToWebSocket(host, ws_port);  // Connect to WebSocket for periodic stats
    return 0;
}